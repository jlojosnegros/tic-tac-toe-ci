node
{
    stage ('Checkout')
    {
        GERRIT_IP = sh (
               script: 'docker inspect -f \'{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\' codeurjc-forge-gerrit',
               returnStdout: true
               ).trim()


        git url: 'http://' + GERRIT_IP + ':8080/tic-tac-toe'
    }
    stage ('Unit and System Testing')
    {
        try
        {
            docker.image('maven').inside('-p 12345:8080 -v $HOME/.m2:/root/.m2 ' + '-v /var/run/docker.sock:/var/run/docker.sock')
            {
                sh 'mvn -Dtest=BoardTest,TicTacToeGameTest,TicTacToeGamePlayTest,SeleniumSytemTest test'
            }
        }
        catch (Exception err)
        {
            sh 'return -1'
        }
        finally
        {
            archiveArtifacts '**/target/*.flv'
            junit testResults: '**/target/surefire-reports/*.xml', keepLongStdio: true
        }

    }

    stage('Build Target')
    {
        docker.image('maven').inside('-v $HOME/.m2:/root/.m2')
        {
            sh ' mvn package -DskipTests -Dmaven.test.skip=true'
        }
    }

    parallel docker: {
        stage ('Docker image')
        {
            sh 'chmod 777 ./build-merge-image.sh'
            sh './build-merge-image.sh'
            sh 'docker login -u practicacimasterupm -p 12341234'
            sh 'docker push practicacimasterupm/curso-ci-practica:dev'
        }
    }, archiva: {
        try {
            stage ('Archive')
            {
		docker.image('maven').inside('--user root -v $HOME/.m2:/root/.m2 --network=ci-network --link codeurjc-forge-archiva:archiva') {
                    sh ' mvn deploy -DskipTests -Dmaven.test.skip=true -DarchivaURL=http://archiva:8080'
                }

            }
        } catch (Exception err) {
            echo "Cannot publish to archiva"
        }

    }
}
